---
name: Release

# yamllint disable-line rule:truthy
on:
  push:
    tags:
      - "v*"

jobs:
  autorelease:
    name: Release
    runs-on: 'ubuntu-latest'
    steps:

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install Poetry
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -

      - name: Add Poetry to $PATH
        run: |
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Add version to environment vars
        run: |
          PROJECT_VERSION=$(poetry version --short)
          echo "PROJECT_VERSION=$PROJECT_VERSION" >> $GITHUB_ENV

      - name: Check if tag version matches project version
        run: |
          TAG=$(git describe HEAD --tags --abbrev=0)
          echo $TAG
          echo $PROJECT_VERSION
          if [[ "$TAG" != "v$PROJECT_VERSION" ]]; then exit 1; fi

      - name: Poetry Check
        run: poetry check --no-interaction

      - name: Python Packages Cache
        id: cached-python-dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-poetry-packages
        with:
          path: ${{ github.workspace }}/.venv
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/poetry.lock') }}

      - name: Poetry Install
        if: steps.cached-python-dependencies.cache-hit != 'true'
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction

      - name: Run Tests
        run: poetry run make test

      - name: Build Artifacts
        run: poetry build

      - name: Generate Release Notes
        # yamllint disable-line rule:line-length
        run: git log $(git describe HEAD~ --tags --abbrev=0)..HEAD --pretty='format:* %h %s%n  * %an <%ae>' --no-merges >> ".github/RELEASE-TEMPLATE.md"

      - name: Create Release Draft
        uses: softprops/action-gh-release@v1
        with:
          body_path: ".github/RELEASE-TEMPLATE.md"
          draft: true
          files: |
            dist/tap_fabdb-${{env.PROJECT_VERSION}}-py3-none-any.whl
            dist/tap-fabdb-${{env.PROJECT_VERSION}}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
